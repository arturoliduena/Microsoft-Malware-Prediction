import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def listNull(df):
	df_null_count = df.isnull().sum()
	return df_null_count[df_null_count > 0]

def split_columns_by_type(df, target):
	cats = list(df.select_dtypes(exclude=np.number).columns)
	_nums = list(df.select_dtypes(include=np.number).columns)
	bools = list(df.select_dtypes(include='bool').columns)
	nums = []
	for col in _nums:
		if df[col].nunique() > 2  and col not in target:
			nums.append(col)
		elif df[col].nunique() <= 2  and col not in target:
			bools.append(col)
	return (cats, nums, bools)

def plot_count_values(dataframe, column, target_column):
	plt.figure(figsize=(15,8))
	plt.xticks(rotation=90)
	order = list(dataframe[column].unique())
	ax1 = plt.subplot(2,1,1)
	ax1 = sns.countplot(dataframe[column], order = order)
	ax2 = plt.subplot(2,1,2)
	ax2 = sns.countplot(data=dataframe, x=column, hue=target_column, order = order)
	plt.show()

def explore_cat_values(dataframe, column, target_column):
	_results_df = dataframe.pivot_table(index=column, values=target_column, dropna=False, aggfunc=[len, np.mean]).sort_values(by=[('len', target_column)], ascending = False)
	_results_df.columns = ['n_rows', 'mean']
	_cross_table = pd.crosstab(dataframe[column], dataframe[target_column])
	_results_df['0_len'] = _cross_table[0]
	_results_df['1_len'] = _cross_table[1]
	_results_df['0_prob'] = _results_df['0_len'] / _results_df['n_rows']
	_results_df['1_prob'] = _results_df['1_len'] / _results_df['n_rows']
	_results_df = _results_df[['n_rows', 'mean', '0_len', '0_prob', '1_len', '1_prob']]
	return _results_df
